"use strict";(self.webpackChunkcodec_wiki=self.webpackChunkcodec_wiki||[]).push([[8158],{3034:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"audio/intro","title":"Intro","description":"What is lossless audio? What is lossy audio? What is an audio codec? This entry serves as an intro to digital audio processing.","source":"@site/docs/audio/intro.mdx","sourceDirName":"audio","slug":"/audio/intro","permalink":"/docs/audio/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/av1-community-contributors/codec-wiki/tree/main/docs/audio/intro.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Intro","description":"What is lossless audio? What is lossy audio? What is an audio codec? This entry serves as an intro to digital audio processing.","keywords":["audio codec","audio","codec","audio encoding","audio decoding","audio compression","audio quality","audio formats","audio file formats","audio file","audio file type","audio file extension","audio file format","audio file types","audio file formats"],"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"High Dynamic Range","permalink":"/docs/introduction/high-dynamic-range"},"next":{"title":"AAC","permalink":"/docs/audio/AAC"}}');var n=s(4848),t=s(8453);const a={title:"Intro",description:"What is lossless audio? What is lossy audio? What is an audio codec? This entry serves as an intro to digital audio processing.",keywords:["audio codec","audio","codec","audio encoding","audio decoding","audio compression","audio quality","audio formats","audio file formats","audio file","audio file type","audio file extension","audio file format","audio file types","audio file formats"],sidebar_position:1},r="Introduction to Lossy & Lossless Audio Compression",d={},c=[{value:"Sampling &amp; the Nyquist Frequency",id:"sampling--the-nyquist-frequency",level:2},{value:"Lossless Audio Compression",id:"lossless-audio-compression",level:2},{value:"Lossy Audio Compression",id:"lossy-audio-compression",level:2},{value:"Conclusion",id:"conclusion",level:2}];function l(e){const i={a:"a",admonition:"admonition",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsx)(i.h1,{id:"introduction-to-lossy--lossless-audio-compression",children:"Introduction to Lossy & Lossless Audio Compression"})}),"\n",(0,n.jsx)(i.admonition,{title:"Under Maintenance",type:"info",children:(0,n.jsx)(i.p,{children:"The content in this entry is incomplete & is in the process of being completed."})}),"\n",(0,n.jsxs)(i.p,{children:["Digital audio is the representation of sound recorded in, or converted into, digital form. To understand digital audio, it's crucial to grasp some fundamental concepts, including ",(0,n.jsx)(i.strong,{children:"sampling"}),", ",(0,n.jsx)(i.strong,{children:"Nyquist Frequency"}),", and the ",(0,n.jsx)(i.strong,{children:"Nyquist-Shannon Sampling Theorem"}),"."]}),"\n",(0,n.jsx)(i.h2,{id:"sampling--the-nyquist-frequency",children:"Sampling & the Nyquist Frequency"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Sampling"})," is the process of converting a continuous, analog audio signal into a discrete digital signal by measuring the amplitude of the audio signal at uniform intervals. The frequency of this measurement is known as the ",(0,n.jsx)(i.em,{children:"sampling rate"}),", typically measured in samples per second, or Hertz (Hz). For example, audio CDs use a sampling rate of 44,100 Hz, which means the audio signal is sampled 44,100 times every second."]}),"\n",(0,n.jsxs)(i.p,{children:["To accurately represent a wave, you need at least two measurements per cycle; one to capture the peak of the wave, and one to capture the trough. If you sample less than twice per cycle, you can't distinguish between different frequencies; this is where the ",(0,n.jsx)(i.strong,{children:"Nyquist frequency"})," comes from. Named after Harry Nyquist, the ",(0,n.jsx)(i.strong,{children:"Nyquist frequency"})," is ",(0,n.jsx)(i.em,{children:"half of the sampling rate of a discrete signal processing system"}),". For a given sampling rate, the Nyquist frequency represents the highest frequency that can be accurately sampled without introducing errors such as aliasing. For example, with a sampling rate of 48,000 Hz, the Nyquist frequency is 24,000 Hz. Capturing frequencies above the Nyquist frequency for a given system can bring about ",(0,n.jsx)(i.strong,{children:"aliasing"})," artifacts. Aliasing occurs where high-frequency components appear as lower frequencies in the sampled signal, distorting the information."]}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.strong,{children:"Nyquist-Shannon sampling theorem"})," states that to avoid aliasing, the sampling rate must be at least twice the highest frequency present in the signal. This theorem is crucial for ensuring that the digital representation of the audio signal retains all the information from the original analog signal without distortion."]}),"\n",(0,n.jsx)(i.h2,{id:"lossless-audio-compression",children:"Lossless Audio Compression"}),"\n",(0,n.jsx)(i.p,{children:"The main benefit of lossless compression is the preservation of audio quality, making it ideal for professional audio production, archiving, and situations where high fidelity is required. However, lossless files are significantly larger than their lossy counterparts, which can be a drawback for storage and (especially) streaming."}),"\n",(0,n.jsx)(i.admonition,{title:"Lossless Compression",type:"note",children:(0,n.jsxs)(i.p,{children:["If you would like to dive more deeply into the topic of lossless compression, you can check out the ",(0,n.jsx)(i.a,{href:"/docs/introduction/lossless",children:"Lossless Compression"})," entry in the Introduction section of the wiki."]})}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.a,{href:"/docs/audio/FLAC",children:"FLAC"}),", ",(0,n.jsx)(i.a,{href:"/docs/audio/WavPack",children:"WavPack"}),", & ",(0,n.jsx)(i.a,{href:"/docs/audio/ALAC",children:"ALAC"})," are examples of popular lossless audio codecs that you are likely to encounter in the wild."]}),"\n",(0,n.jsx)(i.h2,{id:"lossy-audio-compression",children:"Lossy Audio Compression"}),"\n",(0,n.jsx)(i.p,{children:"The primary advantage of lossy compression is the significant reduction in file size, making it ideal for streaming, portable devices, and situations where storage space is limited. However, the trade-off is a potential loss in audio quality, which may be noticeable in critical listening environments."}),"\n",(0,n.jsx)(i.admonition,{title:"Lossy Compression",type:"note",children:(0,n.jsxs)(i.p,{children:["If you would like to dive more deeply into the topic of lossy compression, you can check out the ",(0,n.jsx)(i.a,{href:"/docs/introduction/lossy",children:"Lossy Compression"})," entry in the Introduction section of the wiki."]})}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.a,{href:"/docs/audio/MP3",children:"MP3"}),", ",(0,n.jsx)(i.a,{href:"/docs/audio/AAC",children:"AAC"}),", ",(0,n.jsx)(i.a,{href:"/docs/audio/Vorbis",children:"Vorbis"}),", & ",(0,n.jsx)(i.a,{href:"/docs/audio/Opus",children:"Opus"})," are some examples of popular lossy audio codecs that you are likely to encounter in the wild."]}),"\n",(0,n.jsx)(i.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,n.jsx)(i.p,{children:"Understanding these baseline principles of digital audio processing is essential for informed reading when it comes to the rest of the Audio section of this wiki. We hope this page helped you grasp some of the fundamental concepts that underpin digital audio processing."})]})}function u(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,i,s)=>{s.d(i,{R:()=>a,x:()=>r});var o=s(6540);const n={},t=o.createContext(n);function a(e){const i=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),o.createElement(t.Provider,{value:i},e.children)}}}]);