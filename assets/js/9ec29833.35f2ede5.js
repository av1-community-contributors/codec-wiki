"use strict";(self.webpackChunkcodec_wiki=self.webpackChunkcodec_wiki||[]).push([[9727],{1099:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"video/DSV2","title":"DSV2","description":"DSV2 (or Digital Subband Video 2) is a lossy and lossless video codec that utilizes a wavelet transform and block-based motion compensation for video compression. It is designed to perform optimally at medium-low to medium-high bitrates for resolutions ranging from CIF (352x288) up to Full HD (1920x1080). In terms of compression efficiency and quality, its performance is comparable to MPEG-4 Part 2 and AVC/H.264 (using only P-frames). The bitstream for version 2.8 was frozen as of June 20, 2025.","source":"@site/docs/video/DSV2.mdx","sourceDirName":"video","slug":"/video/DSV2","permalink":"/docs/video/DSV2","draft":false,"unlisted":false,"editUrl":"https://github.com/av1-community-contributors/codec-wiki/tree/main/docs/video/DSV2.mdx","tags":[],"version":"current","sidebarPosition":17,"frontMatter":{"title":"DSV2","sidebar_position":17},"sidebar":"tutorialSidebar","previous":{"title":"DSV","permalink":"/docs/video/DSV"},"next":{"title":"ZIP","permalink":"/docs/data/zip"}}');var a=n(4848),o=n(8453);const t={title:"DSV2",sidebar_position:17},r="DSV2",l={},d=[{value:"Core Features",id:"core-features",level:2},{value:"Encoder Implementation",id:"encoder-implementation",level:2},{value:"Limitations",id:"limitations",level:2},{value:"Usage",id:"usage",level:2},{value:"Encoder Usage",id:"encoder-usage",level:3},{value:"Decoder Usage",id:"decoder-usage",level:3},{value:"Wavelets",id:"wavelets",level:2},{value:"The Compression Process",id:"the-compression-process",level:3},{value:"The Wavelet Transform",id:"the-wavelet-transform",level:4},{value:"Quantization",id:"quantization",level:4},{value:"Advantages &amp; Disadvantages",id:"advantages--disadvantages",level:3},{value:"Advantages",id:"advantages",level:4},{value:"Disadvantages",id:"disadvantages",level:4}];function c(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.header,{children:(0,a.jsx)(i.h1,{id:"dsv2",children:"DSV2"})}),"\n",(0,a.jsxs)(i.p,{children:[(0,a.jsx)(i.strong,{children:"DSV2"})," (or Digital Subband Video 2) is a lossy and lossless video codec that utilizes a wavelet transform and block-based motion compensation for video compression. It is designed to perform optimally at medium-low to medium-high bitrates for resolutions ranging from CIF (352x288) up to Full HD (1920x1080). In terms of compression efficiency and quality, its performance is comparable to MPEG-4 Part 2 and ",(0,a.jsx)(i.a,{href:"/docs/video/AVC",children:"AVC/H.264"})," (using only P-frames). The bitstream for version 2.8 was frozen as of June 20, 2025."]}),"\n",(0,a.jsxs)(i.p,{children:["DSV2 supersedes the original ",(0,a.jsx)(i.a,{href:"/docs/video/DSV",children:"DSV"})," codec."]}),"\n",(0,a.jsx)(i.h2,{id:"core-features",children:"Core Features"}),"\n",(0,a.jsx)(i.p,{children:"DSV2 includes a range of modern codec features, focusing on integer-only operations and avoiding third-party libraries."}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Compression Method"}),": Employs a multiresolution subband analysis, also known as a wavelet transform, instead of the more common DCT."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Motion Compensation"}),': Supports up to quarter-pixel motion compensation and features an "Expanded Prediction Range Mode" (EPRM) for improved prediction.']}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Frame Types"}),": Uses intra (I-frames) and inter (P-frames) with a variable-length closed Group of Pictures (GOP). It does not support bi-directional prediction (B-frames)."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Color Space"}),": Compatible with multiple chroma subsampling formats, including 4:1:0, 4:1:1, 4:2:0, 4:2:2, and 4:4:4."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Quality Optimization"}),": Incorporates adaptive quantization, in-loop filtering, and psychovisual enhancements to improve visual quality."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Lossless Coding"}),": Offers a lossless compression mode."]}),"\n"]}),"\n",(0,a.jsx)(i.h2,{id:"encoder-implementation",children:"Encoder Implementation"}),"\n",(0,a.jsx)(i.p,{children:"The specific encoder implementation detailed in the project repository has several advanced features:"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Rate Control"}),": Supports single-pass average bitrate (ABR) and constant rate factor (CRF)."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Scene Detection"}),": Includes complex algorithms for detecting scene changes."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Human Visual System (HVS)"}),": Utilizes HVS-based models for making decisions on intra block modes and adaptive quantization."]}),"\n",(0,a.jsxs)(i.li,{children:[(0,a.jsx)(i.strong,{children:"Motion Estimation"}),": Implements hierarchical motion estimation."]}),"\n"]}),"\n",(0,a.jsx)(i.h2,{id:"limitations",children:"Limitations"}),"\n",(0,a.jsx)(i.p,{children:"The codec has several self-imposed developer limitations as well as technical limitations:"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"Does not support interlaced video."}),"\n",(0,a.jsx)(i.li,{children:"Component bit depth is limited to 8 bits."}),"\n",(0,a.jsx)(i.li,{children:"Frame dimensions must be divisible by two."}),"\n",(0,a.jsx)(i.li,{children:"The reference implementation is single-threaded and does not use any hardware acceleration, SIMD instructions, or floating-point math."}),"\n"]}),"\n",(0,a.jsx)(i.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsxs)(i.p,{children:["The DSV2 reference codec is written in C89 and can be compiled with a standard C compiler or by using the Zig build system. It is the only encoder/decoder pair available for DSV2. Build instructions for the reference implementation as well as source code are available on the ",(0,a.jsx)(i.a,{href:"https://github.com/LMP88959/Digital-Subband-Video-2",children:"DSV2 GitHub repository"}),"."]}),"\n",(0,a.jsx)(i.h3,{id:"encoder-usage",children:"Encoder Usage"}),"\n",(0,a.jsxs)(i.p,{children:["To encode a video, use the ",(0,a.jsx)(i.code,{children:"e"})," command. The following is a sample command line:"]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-bash",children:"./dsv2 e -inp=video.y4m -out=compressed.dsv -y4m=1 -qp=60 -gop=48\n"})}),"\n",(0,a.jsx)(i.h3,{id:"decoder-usage",children:"Decoder Usage"}),"\n",(0,a.jsxs)(i.p,{children:["To decode a DSV2 file, use the ",(0,a.jsx)(i.code,{children:"d"})," command. The following is a sample command line:"]}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-bash",children:"./dsv2 d -inp=video.dsv -out=decompressed.y4m -y4m=1 -out420p=1\n"})}),"\n",(0,a.jsx)(i.h2,{id:"wavelets",children:"Wavelets"}),"\n",(0,a.jsx)(i.p,{children:"Wavelet-based video codecs like DSV2 utilize wavelet transforms to reduce the amount of data required to represent a digital video."}),"\n",(0,a.jsxs)(i.p,{children:["Compared to the widely used ",(0,a.jsx)(i.a,{href:"/docs/introduction/terminology#discrete-cosine-transform-dct",children:"Discrete Cosine Transform"})," (DCT), wavelets feature essentially the opposite methodology. Each coe\ufb03cient in a DCT represents a constant pattern applied to an entire block, while each coe\ufb03cient in a wavelet transform represents a localized pattern applied to a section of the block."]}),"\n",(0,a.jsxs)(i.p,{children:["Because wavelet transforms can take advantage of large-scale redundancy in an image, they are often used to analyze entire frames at once, or in large overlapping sections. By contrast, DCTs are usually quite small and are intended to cover areas of roughly uniform patterns and complexity (forming the foundation of modern block-based video codecs like ",(0,a.jsx)(i.a,{href:"/docs/video/AVC",children:"AVC/H.264"}),")"]}),"\n",(0,a.jsx)(i.h3,{id:"the-compression-process",children:"The Compression Process"}),"\n",(0,a.jsx)(i.p,{children:"The core of wavelet compression involves a multi-step process that transforms pixel data into a more compressible format. The CineForm codec serves as a practical example of this process."}),"\n",(0,a.jsx)(i.h4,{id:"the-wavelet-transform",children:"The Wavelet Transform"}),"\n",(0,a.jsx)(i.p,{children:"A wavelet can be thought of as a one-dimensional filter that separates low-frequency data (the general, smoother areas of an image) from high-frequency data (the details and edges). To compress a 2D image, this process is applied both horizontally and vertically."}),"\n",(0,a.jsx)(i.p,{children:"For instance, the 2-6 Wavelet used in CineForm calculates low and high-frequency samples. For every two pixels, the low-frequency component is their sum:"}),"\n",(0,a.jsx)(i.p,{children:(0,a.jsx)(i.code,{children:"low frequency sample = pixel[x] + pixel[x+1]"})}),"\n",(0,a.jsx)(i.p,{children:"The high-frequency component is calculated using six input pixels to capture finer details:"}),"\n",(0,a.jsx)(i.p,{children:(0,a.jsx)(i.code,{children:"high frequency sample = pixel[x] - pixel[x+1] + (-pixel[x-2] - pixel[x-1] + pixel[x+2] + pixel[x+3])/8"})}),"\n",(0,a.jsx)(i.p,{children:"This operation is repeated, typically for three levels, on the low-frequency quadrant of the image, progressively concentrating the image's energy into smaller areas. This encompasses the methodology behind the 2-6 Wavelet."}),"\n",(0,a.jsx)(i.h4,{id:"quantization",children:"Quantization"}),"\n",(0,a.jsx)(i.p,{children:"After the wavelet transform, the high-frequency data is quantized. The human eye is less sensitive to subtle changes in high-frequency regions, a characteristic exploited by dividing the wavelet output by a quantizer value. This step is a primary source of data reduction, as it discards information that is less likely to be perceived by the viewer."}),"\n",(0,a.jsx)(i.p,{children:(0,a.jsx)(i.code,{children:"high frequency sample = (wavelet output) / quantizer"})}),"\n",(0,a.jsxs)(i.p,{children:["Entroping coding, or ",(0,a.jsx)(i.a,{href:"/docs/introduction/lossless",children:"lossless compression"}),", follows this step."]}),"\n",(0,a.jsx)(i.h3,{id:"advantages--disadvantages",children:"Advantages & Disadvantages"}),"\n",(0,a.jsx)(i.p,{children:"Wavelet compression presents a different set of trade-offs compared to the block-based DCT approach used in codecs like H.264."}),"\n",(0,a.jsx)(i.h4,{id:"advantages",children:"Advantages"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:'Because wavelet transforms are not confined to sharp-edged blocks, they avoid the "blocking" artifacts and ringing that can appear in DCT-based codecs, especially at lower bitrates.'}),"\n",(0,a.jsx)(i.li,{children:"The efficiency of wavelet codecs like CineForm improves as video resolution increases, making them well-suited for HD, 4K, and 360\xb0 video production."}),"\n",(0,a.jsx)(i.li,{children:"Wavelets can be designed to decode video at lower resolutions at very high speeds, allowing for faster editing workflows."}),"\n"]}),"\n",(0,a.jsx)(i.h4,{id:"disadvantages",children:"Disadvantages"}),"\n",(0,a.jsx)(i.p,{children:"Despite their theoretical benefits, wavelet codecs face significant practical challenges that have limited their widespread adoption."}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"Wavelet codecs lack an efficient method for intra-frame prediction. Unlike H.264, which can predict a block based on its exact neighboring pixels, the overlapping nature of wavelets makes this impossible, resulting in less efficient compression for intra-frames."}),"\n",(0,a.jsx)(i.li,{children:"To avoid blockiness in motion-compensated frames, wavelet codecs often use Overlapped Block Motion Compensation (OBMC), which is significantly more demanding on CPU resources than standard motion compensation."}),"\n",(0,a.jsxs)(i.li,{children:["At lower bitrates, wavelet codecs can produce a blurry look because they don't preserve visual energy and sharp details as effectively as DCT codecs. This blurriness might result in improved ",(0,a.jsx)(i.a,{href:"/docs/metrics/PSNR",children:"PSNR"})," but can be visually less appealing. Visual aliasing can also occur, where parts of the image appear to be coded at a lower resolution and then poorly scaled up."]}),"\n",(0,a.jsx)(i.li,{children:"Many wavelet codecs do not feature spatial adaptive quantization, a technique that improves visual quality by varying quantization across different areas of an image. This can lead to blurring in areas with subtle textures."}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>t,x:()=>r});var s=n(6540);const a={},o=s.createContext(a);function t(e){const i=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),s.createElement(o.Provider,{value:i},e.children)}}}]);