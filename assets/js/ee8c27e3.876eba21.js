"use strict";(self.webpackChunkcodec_wiki=self.webpackChunkcodec_wiki||[]).push([[9819],{2403:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"encoders/uvg266","title":"uvg266","description":"uvg266 is an open-source software encoder for encoding to the H.266 / VVC codec. Developed by the Ultra Video Group, written in C and licensed under BSD 3-clause.","source":"@site/docs/encoders/uvg266.mdx","sourceDirName":"encoders","slug":"/encoders/uvg266","permalink":"/docs/encoders/uvg266","draft":false,"unlisted":false,"editUrl":"https://github.com/av1-community-contributors/codec-wiki/tree/main/docs/encoders/uvg266.mdx","tags":[],"version":"current","sidebarPosition":13,"frontMatter":{"title":"uvg266","sidebar_position":13},"sidebar":"tutorialSidebar","previous":{"title":"VVenC","permalink":"/docs/encoders/VVenC"},"next":{"title":"VTM","permalink":"/docs/encoders/VTM"}}');var t=i(4848),s=i(8453);const r={title:"uvg266",sidebar_position:13},l="uvg266",c={},a=[{value:"Installation",id:"installation",level:2},{value:"Arch Linux",id:"arch-linux",level:3},{value:"Compiling",id:"compiling",level:3},{value:"10-bit Support",id:"10-bit-support",level:3},{value:"Usage",id:"usage",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"uvg266",children:"uvg266"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://github.com/ultravideo/uvg266/",children:"uvg266"})," is an open-source software encoder for encoding to the ",(0,t.jsx)(n.a,{href:"/docs/video/VVC",children:"H.266 / VVC"})," codec. Developed by the ",(0,t.jsx)(n.a,{href:"https://ultravideo.fi/",children:"Ultra Video Group"}),", written in C and licensed under BSD 3-clause.\nThe encoder is based on ",(0,t.jsx)(n.a,{href:"/docs/encoders/Kvazaar",children:"Kvazaar"}),", their open source ",(0,t.jsx)(n.a,{href:"/docs/video/HEVC",children:"HEVC"})," encoder solution."]}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.h3,{id:"arch-linux",children:"Arch Linux"}),"\n",(0,t.jsxs)(n.p,{children:["uvg266 is available in the Arch User Repository (AUR) as ",(0,t.jsx)(n.code,{children:"uvg266"})," and ",(0,t.jsx)(n.code,{children:"uvg266-git"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"compiling",children:"Compiling"}),"\n",(0,t.jsx)(n.p,{children:"Ultra Video Group does not ship any pre-built binaries of their encoders so you'll have to compile them yourself."}),"\n",(0,t.jsxs)(n.p,{children:["Windows users are recommended to compile via MinGW-W64 which comes with ",(0,t.jsx)(n.a,{href:"https://msys2.org/",children:"MSYS2"}),"."]}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsx)(n.p,{children:"Compilation requires GNU Make and CMake"})}),"\n",(0,t.jsxs)(n.admonition,{type:"tip",children:[(0,t.jsx)(n.p,{children:"The following build procedure should work across all common operating systems. Using Clang instead of GCC works."}),(0,t.jsxs)(n.p,{children:["You may add ",(0,t.jsx)(n.code,{children:'-DCMAKE_CXX_FLAGS="-flto -O3 -march=native" -DCMAKE_C_FLAGS="-flto -O3 -march=native -pipe -fno-plt" -DCMAKE_C_FLAGS_INIT="-flto=8 -static"'})," in CMake for better performance."]})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/ultravideo/uvg266.git\ncd uvg266/build\ncmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=0\nmake -j 8\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Binaries will be available in the same folder (",(0,t.jsx)(n.code,{children:"build"}),"), or you can run ",(0,t.jsx)(n.code,{children:"make install"})," on Linux to install (May need elevated permissions)."]}),"\n",(0,t.jsx)(n.h3,{id:"10-bit-support",children:"10-bit Support"}),"\n",(0,t.jsxs)(n.p,{children:["You need to compile with ",(0,t.jsx)(n.code,{children:"-DUVG_BIT_DEPTH=10"})," in the CMake ",(0,t.jsx)(n.code,{children:"-DCMAKE_C_FLAGS"})," option to enable support for encoding 10-bit videos."]}),"\n",(0,t.jsx)(n.p,{children:"For example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'-DCMAKE_C_FLAGS="-DUVG_BIT_DEPTH=10"\n'})}),"\n",(0,t.jsx)(n.p,{children:"With native optimizations:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'-DCMAKE_C_FLAGS="-flto -O3 -march=native -pipe -fno-plt -DUVG_BIT_DEPTH=10"\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsx)(n.p,{children:"Encoding 10-bit with uvg266 is significantly slower as the developers only prioritized SIMD optimizations for 8-bit, and can get really buggy."})}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'title="Simple Y4M input with QP 20 and raw 266 bitstream output"',children:"uvg266 -i input.y4m --input-file-format y4m --qp 20 -o output.266\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'title="Preset slow, CRF 20, Y4M input"',children:"uvg266 -i input.y4m --input-file-format y4m --qp 20 --preset slow -o output.266\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'title="FFmpeg piping"',children:"ffmpeg -v error -i input.mkv -f yuv4mpegpipe -strict -1 - | uvg266 -i - --input-file-format y4m --qp 20 --preset slow -o output.266\n"})}),"\n",(0,t.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Could not find a strategy for crc32c_8x8!"})," - You're out of luck, uvg266 failed to initialize its block partitioning strategy for your specific CPU instruction set, so you ",(0,t.jsx)(n.strong,{children:"can't use the encoder or encode that specific video"}),"."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var o=i(6540);const t={},s=o.createContext(t);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);