"use strict";(self.webpackChunkcodec_wiki=self.webpackChunkcodec_wiki||[]).push([[3850],{4112:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"video/DSV","title":"DSV","description":"DSV or DSV1 (Digital Subband Video 1) is a compact, software-only video codec focusing on simplicity and wavelet-based compression, with features rivaling early MPEG standards. The reference implementation of the codec is designed for flexibility and ease of use in C environments. As of October 2024, DSV1 has been superseded by DSV2.","source":"@site/docs/video/DSV.mdx","sourceDirName":"video","slug":"/video/DSV","permalink":"/docs/video/DSV","draft":false,"unlisted":false,"editUrl":"https://github.com/av1-community-contributors/codec-wiki/tree/main/docs/video/DSV.mdx","tags":[],"version":"current","sidebarPosition":16,"frontMatter":{"title":"DSV","sidebar_position":16},"sidebar":"tutorialSidebar","previous":{"title":"ECM","permalink":"/docs/video/ECM"},"next":{"title":"DSV2","permalink":"/docs/video/DSV2"}}');var o=i(4848),r=i(8453);const t={title:"DSV",sidebar_position:16},a="DSV",d={},l=[{value:"Features",id:"features",level:2},{value:"Limitations",id:"limitations",level:2},{value:"Example Usage",id:"example-usage",level:3},{value:"Documentation &amp; More",id:"documentation--more",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"dsv",children:"DSV"})}),"\n",(0,o.jsxs)(n.p,{children:["DSV or DSV1 (Digital Subband Video 1) is a compact, software-only video codec focusing on simplicity and wavelet-based compression, with features rivaling early MPEG standards. The reference implementation of the codec is designed for flexibility and ease of use in C environments. As of October 2024, DSV1 has been superseded by ",(0,o.jsx)(n.a,{href:"/docs/video/DSV2",children:"DSV2"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Wavelet-based compression:"})," Uses multiresolution subband analysis (wavelet transform) instead of DCT. More information on wavelet transforms is available on the ",(0,o.jsx)(n.a,{href:"/docs/video/DSV2",children:"DSV2"})," page."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Motion Compensation:"})," Supports half-pixel motion compensation."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Chroma Subsampling:"})," 4:1:1, 4:2:0, 4:2:2, and 4:4:4 formats."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Adaptive Quantization:"})," Dynamically adjusts quantization for better quality."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Frame Types:"})," Supports intra and inter frames with variable-length closed GOPs (no bidirectional/B-frames, only forward prediction)."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Entropy Coding:"})," Uses interleaved exponential-Golomb coding for simplicity."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Compression Range:"})," Supports a wider range of compression and lower bitrates than MPEG-1/2."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"The reference DSV encoder features:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Rate Control:"})," Single-pass average bitrate (ABR) or constant rate factor (CRF)."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Human Visual System (HVS) Optimization:"})," Simple intra block mode determination."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Scene Change Detection:"})," Based on average luma changes."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Hierarchical Motion Estimation:"})," For improved efficiency."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Adaptive Quantization Stability Tracking:"})," Improves quality."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"C89 Compatibility:"})," Written for standard C89, no external libraries, integer-only arithmetic, single-threaded, and portable."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"limitations",children:"Limitations"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"No built-in interlacing support."}),"\n",(0,o.jsx)(n.li,{children:"Only 8 bits per component supported."}),"\n",(0,o.jsx)(n.li,{children:"Frame dimensions must be divisible by 2."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"example-usage",children:"Example Usage"}),"\n",(0,o.jsx)(n.p,{children:"The only DSV encoder available is the reference encoder."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Encoding:","\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"./dsv1 e -y -v -inp_bus_cif.yuv -out_saved.dsv -gop12 -w352 -h288 -fps_num30 -qp85 -kbps1100\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["Decoding:","\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"./dsv1 d -inp_video.dsv -out_decompressed.yuv -out420p\n"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"documentation--more",children:"Documentation & More"}),"\n",(0,o.jsxs)(n.p,{children:["Detailed information is available in ",(0,o.jsx)(n.a,{href:"https://github.com/LMP88959/Digital-Subband-Video-1",children:"the repository"}),"\u2019s PDF documents (",(0,o.jsx)(n.code,{children:"DSV1_spec.pdf"}),", ",(0,o.jsx)(n.code,{children:"DSV1_encoder.pdf"}),"). More example videos and usage instructions are provided in the README and linked resources in the repo."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>a});var s=i(6540);const o={},r=s.createContext(o);function t(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);