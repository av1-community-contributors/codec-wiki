"use strict";(self.webpackChunkcodec_wiki=self.webpackChunkcodec_wiki||[]).push([[6778],{1669:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/av1_for_dummies_guide-a83f247bebb2261a1ba671e33ddf1e99.avif"},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var t=i(6540);const s={},r=t.createContext(s);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:n},e.children)}},9543:e=>{e.exports=JSON.parse('{"permalink":"/blog/av1-for-dummies","source":"@site/blog/2024-06-24-av1-for-dummies-2.mdx","title":"AV1 for Dummies","description":"AV1 for Dummies is a comprehensive, legible guide on how to get started with AV1 at any experience level. Whether you\'re on Windows using your first video encoding program, or a seasoned Linux user looking to optimize your encoding pipeline, this guide has you covered.","date":"2024-06-24T00:00:00.000Z","tags":[{"inline":true,"label":"video","permalink":"/blog/tags/video"},{"inline":true,"label":"compression","permalink":"/blog/tags/compression"}],"readingTime":16.645,"hasTruncateMarker":true,"authors":[{"name":"Gianni Rosato","title":"Maintainer","url":"https://github.com/gianni-rosato","image_url":"https://avatars.githubusercontent.com/u/35711760?v=4","imageURL":"https://avatars.githubusercontent.com/u/35711760?v=4","socials":{},"key":null,"page":null},{"name":"Simulping","title":"Maintainer / Encoder","url":"https://github.com/Simulping","image_url":"https://avatars.githubusercontent.com/u/12994794?v=4","imageURL":"https://avatars.githubusercontent.com/u/12994794?v=4","socials":{},"key":null,"page":null}],"frontMatter":{"title":"AV1 for Dummies","description":"AV1 for Dummies is a comprehensive, legible guide on how to get started with AV1 at any experience level. Whether you\'re on Windows using your first video encoding program, or a seasoned Linux user looking to optimize your encoding pipeline, this guide has you covered.","slug":"av1-for-dummies","authors":[{"name":"Gianni Rosato","title":"Maintainer","url":"https://github.com/gianni-rosato","image_url":"https://avatars.githubusercontent.com/u/35711760?v=4","imageURL":"https://avatars.githubusercontent.com/u/35711760?v=4"},{"name":"Simulping","title":"Maintainer / Encoder","url":"https://github.com/Simulping","image_url":"https://avatars.githubusercontent.com/u/12994794?v=4","imageURL":"https://avatars.githubusercontent.com/u/12994794?v=4"}],"tags":["video","compression"],"image":"/img/av1_for_dummies_guide.jpg","hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"Codec Wiki: One Year Later","permalink":"/blog/codec-wiki-one-year-later"},"nextItem":{"title":"Observing SVT-AV1 v2.1.0\'s improvements: A New Deep Dive","permalink":"/blog/svt-av1-second-deep-dive"}}')},9609:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});var t=i(9543),s=i(4848),r=i(8453);const o={title:"AV1 for Dummies",description:"AV1 for Dummies is a comprehensive, legible guide on how to get started with AV1 at any experience level. Whether you're on Windows using your first video encoding program, or a seasoned Linux user looking to optimize your encoding pipeline, this guide has you covered.",slug:"av1-for-dummies",authors:[{name:"Gianni Rosato",title:"Maintainer",url:"https://github.com/gianni-rosato",image_url:"https://avatars.githubusercontent.com/u/35711760?v=4"},{name:"Simulping",title:"Maintainer / Encoder",url:"https://github.com/Simulping",image_url:"https://avatars.githubusercontent.com/u/12994794?v=4"}],tags:["video","compression"],image:"/img/av1_for_dummies_guide.jpg",hide_table_of_contents:!1},l=void 0,a={authorsImageUrls:[void 0,void 0]},c=[{value:"Introduction",id:"introduction",level:2},{value:"Why AV1?",id:"why-av1",level:3},{value:"Do&#39;s &amp; Don&#39;ts",id:"dos--donts",level:3},{value:"Tools",id:"tools",level:2},{value:"GUI",id:"gui",level:3},{value:"CLI",id:"cli",level:3},{value:"Conclusion",id:"conclusion",level:3},{value:"Encoders",id:"encoders",level:2},{value:"SVT-AV1",id:"svt-av1",level:3},{value:"rav1e",id:"rav1e",level:3},{value:"aomenc (libaom)",id:"aomenc-libaom",level:3},{value:"SVT-AV1-PSY",id:"svt-av1-psy",level:3},{value:"Conclusion",id:"conclusion-1",level:3},{value:"Final Conclusion",id:"final-conclusion",level:2}];function d(e){const n={a:"a",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"AV1 for Dummies is a comprehensive, legible guide on how to get started with AV1 at any experience level. Whether you're on Windows using your first video encoding program, or a seasoned Linux user looking to optimize your encoding pipeline, this guide has you covered."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Compare",src:i(1669).A+"",width:"2048",height:"1080"})}),"\n",(0,s.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://wiki.x266.mov/docs/video/AV1",children:"AV1"})," is a royalty-free video codec developed by the Alliance for Open Media. It is designed to replace ",(0,s.jsx)(n.a,{href:"https://wiki.x266.mov/docs/video/VP9",children:"VP9"})," and presently competes with ",(0,s.jsx)(n.a,{href:"https://wiki.x266.mov/docs/video/VVC",children:"H.266"}),". AV1 is known for its high compression efficiency, which the marketing will have you believe reduces file sizes by up to 50% compared to ",(0,s.jsx)(n.a,{href:"https://wiki.x266.mov/docs/video/AVC",children:"H.264"})," and up to 30% compared to ",(0,s.jsx)(n.a,{href:"https://wiki.x266.mov/docs/video/HEVC",children:"H.265"})," across the board. It is supported by several major browsers and is widely used across many streaming services and video platforms."]}),"\n",(0,s.jsx)(n.h3,{id:"why-av1",children:"Why AV1?"}),"\n",(0,s.jsxs)(n.p,{children:["Before we dive in, it is important to understand ",(0,s.jsx)(n.em,{children:"why"})," you may want to use AV1 instead of other codecs. The reality is that AV1 is ",(0,s.jsx)(n.em,{children:"not"})," better than H.264/5 in every single scenario; video encoding is a complicated field, and the best codec for you will depend on your specific needs. AV1 excels in:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Low to medium-high fidelity encoding"}),"\n",(0,s.jsx)(n.li,{children:"Higher resolution encoding"}),"\n",(0,s.jsx)(n.li,{children:"Encoding content with very little grain or noise"}),"\n",(0,s.jsx)(n.li,{children:"Slow, non-realtime contexts (e.g. offline encoding)"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The enumeration above still consists of broad strokes, but the point is to understand that AV1 is not a silver bullet. It will not automatically make your videos smaller while preserving your desired quality. To make things more difficult, the ",(0,s.jsx)(n.a,{href:"https://wiki.x266.mov/docs/encoders/x264",children:"x264"})," & ",(0,s.jsx)(n.a,{href:"https://wiki.x266.mov/docs/encoders/x265",children:"x265"})," encoders are very mature, while AV1 encoding efforts designed to meet the extremely complicated needs of the human eye are still in their infancy."]}),"\n",(0,s.jsx)(n.p,{children:"This guide focuses almost entirely on tools great for offline, non-realtime encoding for various kinds of content. Streaming is an altogether different application of AV1, and is only covered sparsely here."}),"\n",(0,s.jsx)(n.h3,{id:"dos--donts",children:"Do's & Don'ts"}),"\n",(0,s.jsx)(n.p,{children:"Due to a lot of misunderstandings about codecs and compression, there are a lot of common misconceptions that are held regarding video encoding. We'll start by outlining some bad practices:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Don't"})," encode the same video multiple times. This is a common mistake made by people new to video encoding. Every time you encode a video, you lose additional quality due to ",(0,s.jsx)(n.em,{children:"generation loss"}),". This is because video codecs are lossy, and every time you encode a video, you lose more information. This is why it is important to keep the original video file if you frequently re-encode it."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Don't"})," blindly copy settings from others without understanding them. What works for one person's content and workflow may not work for yours. Even the default settings on many encoders are not optimal for most content."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Don't"})," assume that higher bitrate equates to better quality. Inefficient encoding can waste bits without improving visual quality, and efficient encoding can make lower bitrate video look drastically better than higher bitrate video using the same codec."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Don't"})," assume all encoders/presets/settings/implementations are created equal. Even given two encoding frameworks that use the same underlying encoder, you may achieve different results given encoder version mismatches or subtly different settings used under the hood."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Don't"})," use unnecessarily slow presets/speeds unless you have a specific need and ample time. While slower presets improve encoding efficiency most of the time, the quality gains reach a point of diminishing returns beyond a certain point. Use the slowest preset you can tolerate, not the slowest preset available."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Don't"})," blindly trust metric scores. It is unfortunate how trusted ",(0,s.jsx)(n.a,{href:"https://wiki.x266.mov/docs/metrics/VMAF",children:"VMAF"})," is considering how infrequently it correlates with visual fidelity in practice now that it has become so popular. Even the beloved ",(0,s.jsx)(n.a,{href:"https://wiki.x266.mov/docs/metrics/SSIMULACRA2",children:"SSIMULACRA2"})," is not a perfect one-to-one with the human eye."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Now, let's move on to some ",(0,s.jsx)(n.strong,{children:"good"})," practices:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Experiment with different settings and compare the results."}),"\n",(0,s.jsx)(n.li,{children:"Consider your content type when choosing encoding settings. Film, animation, and sports all have different characteristics that benefit from distinct approaches."}),"\n",(0,s.jsx)(n.li,{children:"Try to use CRF for offline encoding, as opposed to CBR or VBR. While the latter two are effective for precisely targeting a particular bitrate, CRF is more effective at targeting a specific quality level efficiently."}),"\n",(0,s.jsx)(n.li,{children:"Always use 10-bit color, even with an 8-bit source. AV1's internal workings are much more suited to 10-bit color, and you are almost always guaranteed quality improvements with zero compatibility penalty as 10-bit color is part of AV1's baseline profile."}),"\n",(0,s.jsx)(n.li,{children:"Consider using grain synthesis for grainy content, as AV1 can struggle with preserving film grain efficiently."}),"\n",(0,s.jsx)(n.li,{children:"Keep your encoding software up-to-date; the encoding world moves quickly."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"tools",children:"Tools"}),"\n",(0,s.jsx)(n.p,{children:"Since writing the last guide, there are now several versatile tools available for AV1 encoding. Below, we've assembled some tables of popular encoding tools and their features."}),"\n",(0,s.jsx)(n.h3,{id:"gui",children:"GUI"}),"\n",(0,s.jsx)(n.p,{children:"Here's the key:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Encoder(s)"}),": The AV1 encoder(s) the software uses or is able to use. This is between ",(0,s.jsx)(n.a,{href:"https://wiki.x266.mov/docs/encoders/SVT-AV1",children:"SVT-AV1"}),", ",(0,s.jsx)(n.a,{href:"https://wiki.x266.mov/docs/encoders/aomenc",children:"aomenc"}),", ",(0,s.jsx)(n.a,{href:"https://wiki.x266.mov/docs/encoders/rav1e",children:"rav1e"}),", ",(0,s.jsx)(n.a,{href:"https://wiki.x266.mov/docs/encoders/SVT-AV1-PSY",children:"SVT-AV1-PSY"}),", and various aomenc forks. We'll get into this more later."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Ease of Use"}),": How intuitive the software is, especially for beginners."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Complexity"}),": How flexible the software can be for advanced users."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Efficiency"}),': How "good" the underlying encoder(s) are. This is more subjective, but tools with bad defaults, misleading options, or slow release cycles won\'t score well here.']}),"\n"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Platform(s)"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Encoder(s)"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Ease of Use"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Complexity"}),(0,s.jsx)(n.th,{children:"Efficiency"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://wiki.x266.mov/docs/utilities/Aviator",children:"Aviator"})}),(0,s.jsx)(n.td,{children:"Linux"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"SVT-AV1-PSY"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cf\u25cf\u25cf"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cb\u25cb\u25cb\u25cb"}),(0,s.jsx)(n.td,{children:"\u25cf\u25cf\u25cf\u25cf\u25cf"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://wiki.x266.mov/docs/utilities/nmkoder",children:"NMKODER"})}),(0,s.jsx)(n.td,{children:"Windows"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"Any"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cf\u25cb\u25cb"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cf\u25cf\u25cb"}),(0,s.jsx)(n.td,{children:"\u25cf\u25cf\u25cb\u25cb\u25cb"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://github.com/Av1ation-Association/Av1ation-Creations/releases/",children:"Av1ation Station"})}),(0,s.jsx)(n.td,{children:"Any"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"Any"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cf\u25cb\u25cb"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cf\u25cf\u25cf"}),(0,s.jsx)(n.td,{children:"\u25cf\u25cf\u25cf\u25cf\u25cb"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://github.com/staxrip/staxrip",children:"StaxRip"})}),(0,s.jsx)(n.td,{children:"Windows"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"Any"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cb\u25cb\u25cb"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cf\u25cf\u25cf"}),(0,s.jsx)(n.td,{children:"\u25cf\u25cf\u25cf\u25cf\u25cb"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://github.com/Alkl58/NotEnoughAV1Encodes",children:"NEAV1E"})}),(0,s.jsx)(n.td,{children:"Windows"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"Any"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cf\u25cb\u25cb"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cf\u25cb\u25cb"}),(0,s.jsx)(n.td,{children:"\u25cf\u25cf\u25cb\u25cb\u25cb"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://handbrake.fr/",children:"Handbrake"})}),(0,s.jsx)(n.td,{children:"Any"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"SVT-AV1"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cf\u25cf\u25cb"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cb\u25cb\u25cb"}),(0,s.jsx)(n.td,{children:"\u25cf\u25cf\u25cb\u25cb\u25cb"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://github.com/cdgriffith/FastFlix",children:"FastFlix"})}),(0,s.jsx)(n.td,{children:"Any"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"Any"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cf\u25cf\u25cb"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cf\u25cb\u25cb"}),(0,s.jsx)(n.td,{children:"\u25cf\u25cf\u25cb\u25cb\u25cb"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://wiki.x266.mov/docs/utilities/rav1ator",children:"rAV1ator"})}),(0,s.jsx)(n.td,{children:"Linux"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"rav1e"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cf\u25cf\u25cb"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cf\u25cb\u25cb"}),(0,s.jsx)(n.td,{children:"\u25cf\u25cb\u25cb\u25cb\u25cb"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://autocompressor.net/",children:"Autocompressor"})}),(0,s.jsx)(n.td,{children:"Web"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"SVT-AV1"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cf\u25cf\u25cf"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cb\u25cb\u25cb\u25cb"}),(0,s.jsx)(n.td,{children:"\u25cf\u25cf\u25cf\u25cb\u25cb"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"Our top pics are:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["For beginners: ",(0,s.jsx)(n.strong,{children:"Aviator"}),". If you are on Linux and you want zero hassle whatsoever, Aviator is simple but highly effective. As a Flatpak application, it ships a bundled SVT-AV1-PSY binary that is up-to-date, compiled efficiently, and handled with extensively tested defaults. It is hard to go wrong with Aviator even as an advanced user, despite its simplicity."]}),"\n",(0,s.jsxs)(n.li,{children:["For advanced users: ",(0,s.jsx)(n.strong,{children:"Av1ation Station"}),". Av1ator Station is thoughtfully designed to be your one-stop shop for video encoding. Even though it is brand new, it has proven itself to be a capable and reliable solution for advanced video encoders that have a lot of settings to tweak and encodes to keep track of."]}),"\n",(0,s.jsxs)(n.li,{children:["For Windows users: ",(0,s.jsx)(n.strong,{children:"StaxRip"}),". StaxRip is a long-standing, well-maintained, and highly flexible video encoding tool that supports a plethora of encoders and formats. It comes bundled with SVT-AV1-PSY and is a great choice for Windows users who want a powerful and versatile tool for video encoding."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"cli",children:"CLI"}),"\n",(0,s.jsx)(n.p,{children:"In the terminal, advanced encoders can explore a much greater degree of complexity than many GUIs allow. That being said, ease of use is still a consideration when managing complex command-line encoding workflows. Let's begin with the key:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"We're omitting the \"Platform(s)\" column here, as this section targets Linux users. As a Windows user, WSL has you covered - as a Mac user, you're likely to experience parity with Linux (most of the time)."}),"\n"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Name"}),(0,s.jsx)(n.th,{children:"Framework(s)"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Ease of Use"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Complexity"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Features"}),(0,s.jsx)(n.th,{style:{textAlign:"center"},children:"Scene Detection"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"SvtAv1EncApp"}),(0,s.jsx)(n.td,{children:"None"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cb\u25cb\u25cb\u25cb"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cb\u25cb\u25cb"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cb\u25cb\u25cb\u25cb"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"No"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://wiki.x266.mov/docs/utilities/ffmpeg",children:"FFmpeg"})}),(0,s.jsx)(n.td,{children:"Itself"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cb\u25cb\u25cb"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cf\u25cf\u25cf"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cf\u25cf\u25cb"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"No"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://wiki.x266.mov/docs/utilities/av1an",children:"Av1an"})}),(0,s.jsx)(n.td,{children:"FFmpeg"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cb\u25cb\u25cb\u25cb"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cf\u25cf\u25cf"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cf\u25cb\u25cb"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"Yes"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://wiki.x266.mov/docs/utilities/rav1ator-cli",children:"rAV1ator CLI"})}),(0,s.jsx)(n.td,{children:"Av1an"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cf\u25cf\u25cb"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cf\u25cf\u25cb"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cf\u25cf\u25cb"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"Yes"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://github.com/kingstefan26/alabamaEncoder",children:"alabamaEncoder"})}),(0,s.jsx)(n.td,{children:"FFmpeg"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cb\u25cb\u25cb"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cf\u25cf\u25cf"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"\u25cf\u25cf\u25cf\u25cf\u25cf"}),(0,s.jsx)(n.td,{style:{textAlign:"center"},children:"Yes"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"Our top picks are:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["For beginners: ",(0,s.jsx)(n.strong,{children:"rAV1ator CLI"}),". rAV1ator CLI essentially walks you through the process of writing Av1an commands. It can install binaries for you, save your previous commands, and detect scenes via Av1an. This makes it a great choice for beginners who want to learn the ropes of AV1 encoding without diving into the deep end headfirst. For advanced users, it makes rapidly writing, testing, & cataloging Av1an encoding commands much simpler."]}),"\n",(0,s.jsxs)(n.li,{children:["For advanced users: ",(0,s.jsx)(n.strong,{children:"alabamaEncoder"}),". alabamaEncoder is a powerful and flexible tool that allows you to encode video with FFmpeg and AV1. It is highly configurable and supports a mind-bending array of powerful features that would be hard to find elsewhere. While the tool is still new, it is already a great choice for advanced users who want to push the boundaries of what is possible to incorporate into an encoding workflow."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"conclusion",children:"Conclusion"}),"\n",(0,s.jsx)(n.p,{children:"In conclusion, the best AV1 tool for you will depend on your needs and experience level. If you are a beginner, Aviator is a great choice for Linux users, while StaxRip is a good option for Windows users. For advanced users, Av1ation Station is a powerful and versatile tool that can handle numerous encoding tasks. If you prefer the command line, rAV1ator CLI is a great choice for beginners, while alabamaEncoder is a powerful tool for advanced users. No matter which tool you choose, it is hard to go wrong in the modern AV1 encoding landscape when it comes to your utility of choice."}),"\n",(0,s.jsx)(n.h2,{id:"encoders",children:"Encoders"}),"\n",(0,s.jsx)(n.p,{children:"The world of AV1 encoding is diverse and complex, with several open-source encoders available, each bringing its own set of strengths, weaknesses, and unique features to the table. In this section, we'll dive deep into the characteristics of four major AV1 encoders:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"SVT-AV1,"}),"\n",(0,s.jsx)(n.li,{children:"rav1e,"}),"\n",(0,s.jsx)(n.li,{children:"aomenc (libaom), and"}),"\n",(0,s.jsx)(n.li,{children:"SVT-AV1-PSY"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Understanding these encoders is crucial for making informed decisions about what best suits your specific encoding needs."}),"\n",(0,s.jsx)(n.h3,{id:"svt-av1",children:"SVT-AV1"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://wiki.x266.mov/docs/encoders/SVT-AV1",children:"SVT-AV1"})," (Scalable Video Technology for AV1) is an AV1 encoder library and application developed by Intel, Netflix, and others. It has gained significant popularity in the encoding community due to its impressive balance of speed, quality, and scalability."]}),"\n",(0,s.jsx)(n.p,{children:"Links:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Wiki page: ",(0,s.jsx)(n.a,{href:"https://wiki.x266.mov/docs/encoders/SVT-AV1",children:"SVT-AV1"})]}),"\n",(0,s.jsxs)(n.li,{children:["Git repository: ",(0,s.jsx)(n.a,{href:"https://gitlab.com/AOMediaCodec/SVT-AV1",children:"https://gitlab.com/AOMediaCodec/SVT-AV1"})]}),"\n",(0,s.jsxs)(n.li,{children:["Documentation: ",(0,s.jsx)(n.a,{href:"https://gitlab.com/AOMediaCodec/SVT-AV1/-/blob/master/Docs/README.md",children:"https://gitlab.com/AOMediaCodec/SVT-AV1/-/blob/master/Docs/README.md"})]}),"\n"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Performance & Scalability"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"SVT-AV1 is renowned for its encoding speed, particularly at higher speed presets."}),"\n",(0,s.jsx)(n.li,{children:"It leverages parallel processing, making it exceptionally efficient on multi-core systems. Fun fact: SVT-AV1's parallel processing is lossless, so it doesn't compromise quality for speed."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Quality-to-Speed Ratio"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"SVT-AV1 strikes an impressive balance between encoding speed and output quality."}),"\n",(0,s.jsx)(n.li,{children:"At faster presets, it usually outperforms other encoders in quality per unit of encoding time."}),"\n",(0,s.jsxs)(n.li,{children:["While it may not achieve the absolute highest ",(0,s.jsx)(n.em,{children:"quality per bit"})," possible, its quality is generally considered impressive for its speed."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Flexibility"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"SVT-AV1 offers a wide range of encoding options and presets, allowing fine-tuned control over the encoding process."}),"\n",(0,s.jsx)(n.li,{children:"It provides 14 presets (0-13), with 0 being the slowest and highest quality, and 13 being the fastest but lowest quality."}),"\n",(0,s.jsx)(n.li,{children:"Advanced options allow users to adjust parameters like hierarchical levels, intra-refresh type, and tuning modes."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Continuous Development"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"SVT-AV1 receives frequent updates and optimizations, with new releases often coming alongside big changes."}),"\n",(0,s.jsx)(n.li,{children:"The open-source nature of the project encourages community contributions and rapid feature development."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"SVT-AV1 is an excellent choice for a wide range of encoding scenarios. It's particularly well-suited for:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"High-volume encoding operations where speed is crucial"}),"\n",(0,s.jsx)(n.li,{children:"Live or near-live encoding of high-resolution content"}),"\n",(0,s.jsx)(n.li,{children:"Scenarios where a balance between quality and encoding speed is required"}),"\n",(0,s.jsx)(n.li,{children:"Users with multi-core systems who want to leverage their hardware efficiently"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Some downsides include:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Higher memory usage compared to other encoders"}),"\n",(0,s.jsx)(n.li,{children:"The developers assess quality via its performance on traditional legacy metrics, which harms its perceptual fidelity ceiling."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"rav1e",children:"rav1e"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://wiki.x266.mov/docs/encoders/rav1e",children:"rav1e"})," is an AV1 encoder written in Rust & Assembly. Developed by the open-source community alongside Xiph, it brings a unique approach to AV1 encoding with its focus on safety and correctness."]}),"\n",(0,s.jsx)(n.p,{children:"Links:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Wiki page: ",(0,s.jsx)(n.a,{href:"https://wiki.x266.mov/docs/encoders/rav1e",children:"rav1e"})]}),"\n",(0,s.jsxs)(n.li,{children:["Git repository: ",(0,s.jsx)(n.a,{href:"https://github.com/xiph/rav1e",children:"https://github.com/xiph/rav1e"})]}),"\n",(0,s.jsxs)(n.li,{children:["Documentation: ",(0,s.jsx)(n.a,{href:"https://github.com/xiph/rav1e/tree/master/doc#readme",children:"https://github.com/xiph/rav1e/tree/master/doc#readme"})]}),"\n"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Safety & Reliability"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Being written in Rust, rav1e emphasizes memory safety and thread safety."}),"\n",(0,s.jsx)(n.li,{children:"This focus on safety translates to a more stable and reliable encoding process, with reduced risks of crashes or undefined behavior."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"High Fidelity"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"At high fidelity targets - an area where AV1 usually lacks - rav1e is a strong contender compared to other encoders."}),"\n",(0,s.jsx)(n.li,{children:"It excels in preserving fine details and textures, making it a good choice for high-fidelity encoding."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Quality"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"While not typically matching aomenc or SVT-AV1 in pure compression efficiency, rav1e can produce high-quality output videos."}),"\n",(0,s.jsx)(n.li,{children:"It often achieves a good balance between quality and encoding time, especially at medium-speed settings."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Perceptually Driven"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"rav1e's development is driven by visual fidelity, without relying heavily on metrics."}),"\n",(0,s.jsx)(n.li,{children:"This focus on perceptual quality leads to a stronger foundation for future potential improvements in visual quality, as well as making the encoder very easy to use as it does not require excessive tweaking."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"rav1e is well-suited for:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Projects where stability is paramount"}),"\n",(0,s.jsx)(n.li,{children:"Users who prioritize a community-driven, open-source development approach"}),"\n",(0,s.jsx)(n.li,{children:"Encoding tasks where a balance between quality and speed is needed, but the absolute fastest speeds are not required"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Some limitations of rav1e include:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Lagging development compared to other encoders"}),"\n",(0,s.jsx)(n.li,{children:"Slower encoding speeds compared to SVT-AV1 at similar quality & size"}),"\n",(0,s.jsx)(n.li,{children:"Fewer advanced options compared to other encoders"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"aomenc-libaom",children:"aomenc (libaom)"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://wiki.x266.mov/docs/encoders/aomenc",children:"aomenc"}),", based on the libaom library, is the reference encoder for AV1. Developed by the Alliance for Open Media (AOM), it is the benchmark for AV1 encoding quality and compliance."]}),"\n",(0,s.jsx)(n.p,{children:"Links:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Wiki page: ",(0,s.jsx)(n.a,{href:"https://wiki.x266.mov/docs/encoders/aomenc",children:"aomenc"})]}),"\n",(0,s.jsxs)(n.li,{children:["Git repository: ",(0,s.jsx)(n.a,{href:"https://aomedia.googlesource.com/aom/",children:"https://aomedia.googlesource.com/aom/"})]}),"\n"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Encoding Quality"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"aomenc is widely regarded as the gold standard for AV1 encoding quality."}),"\n",(0,s.jsx)(n.li,{children:"It often achieves high compression efficiency among AV1 encoders, especially at slower speed settings."}),"\n",(0,s.jsx)(n.li,{children:"The encoder squeezes out nearly every last bit of efficiency from the AV1 codec, making it ideal for archival purposes or when quality per bit is critical."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Encoding Speed"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"aomenc is generally the slowest among major AV1 encoders."}),"\n",(0,s.jsx)(n.li,{children:"It offers 13 CPU speed levels (0-12), but even at its fastest settings, it's typically slower than other encoders at their slower settings."}),"\n",(0,s.jsx)(n.li,{children:"The slow speed is often considered a trade-off for its high compression efficiency."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Extensive Options"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"As the reference implementation, aomenc offers the most comprehensive encoding options."}),"\n",(0,s.jsx)(n.li,{children:"It provides fine-grained control over nearly every aspect of the AV1 encoding process."}),"\n",(0,s.jsx)(n.li,{children:"Advanced users can tweak many parameters to optimize for specific content types or encoding scenarios."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Flexibility"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Being the reference encoder, aomenc produces highly standards-compliant AV1 bitstreams that take advantage of the full arsenal of AV1 features."}),"\n",(0,s.jsx)(n.li,{children:"It supports 4:2:0 and 4:4:4 chroma subsampling, 8- to 12-bit color depth, and various other advanced features that more specialized encoders like SVT-AV1 do not support."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"aomenc is ideal for:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Scenarios where achieving the highest possible quality is the primary goal"}),"\n",(0,s.jsx)(n.li,{children:"Archival encoding where compression efficiency is crucial"}),"\n",(0,s.jsx)(n.li,{children:"Research and development in video compression"}),"\n",(0,s.jsx)(n.li,{children:"Encoding projects where encoding time is not a significant constraint"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Some drawbacks of aomenc include:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Unresponsive development driven by legacy metrics, leading to slower adoption of new techniques and ignoring improvements communicated by people outside the Google development team"}),"\n",(0,s.jsx)(n.li,{children:"Cripplingly difficult to use for beginners, with a culture of cargo-culting settings"}),"\n",(0,s.jsx)(n.li,{children:"Slow encoding speeds compared to other AV1 encoders, which has less of an impact on the quality of the output than it used to compared to maturing encoders like SVT-AV1"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"svt-av1-psy",children:"SVT-AV1-PSY"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://wiki.x266.mov/docs/encoders/svt-av1-psy",children:"SVT-AV1-PSY"})," is a community fork of the SVT-AV1 encoder focused on psychovisual optimizations to enhance perceived visual quality. It aims at closing the distance between SVT-AV1's high speeds and the perceptual quality of aomenc's slow brute force approach."]}),"\n",(0,s.jsx)(n.p,{children:"Links:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Wiki page: ",(0,s.jsx)(n.a,{href:"https://wiki.x266.mov/docs/encoders/svt-av1-psy",children:"SVT-AV1-PSY"})]}),"\n",(0,s.jsxs)(n.li,{children:["Git repository: ",(0,s.jsx)(n.a,{href:"https://github.com/gianni-rosato/svt-av1-psy",children:"https://github.com/gianni-rosato/svt-av1-psy"})]}),"\n",(0,s.jsxs)(n.li,{children:["Documentation: ",(0,s.jsx)(n.a,{href:"https://github.com/gianni-rosato/svt-av1-psy/blob/master/Docs/PSY-Development.md",children:"https://github.com/gianni-rosato/svt-av1-psy/blob/master/Docs/PSY-Development.md"})]}),"\n"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Perceptual Optimizations"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"SVT-AV1-PSY introduces various psychovisual enhancements to improve the perceived quality of encoded video."}),"\n",(0,s.jsx)(n.li,{children:"These optimizations often result in output that looks better to the human eye, even if it might not always score as well in objective metrics."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Additional Features"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Introduces new options like variance boost, which can help maintain detail in high-contrast scenes."}),"\n",(0,s.jsx)(n.li,{children:"Offers alternative curve options for more nuanced control over the encoding process."}),"\n",(0,s.jsx)(n.li,{children:"Extends the CRF (Constant Rate Factor) range to 70 (from 63 in mainline SVT-AV1), allowing for extremely low-bitrate encodes."}),"\n",(0,s.jsx)(n.li,{children:'Introduces additional tuning options, including a new "SSIM with Subjective Quality Tuning" mode that can improve perceived quality.'}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Visual Fidelity Focus"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Aims to produce more visually pleasing results, sometimes at the expense of metric performance."}),"\n",(0,s.jsx)(n.li,{children:"Includes options like sharpness adjustment and adaptive film grain synthesis which can significantly impact the visual characteristics of the output."}),"\n",(0,s.jsx)(n.li,{children:"Features modified defaults driven by perceptual quality considerations."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Extended HDR Support"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Includes built-in support for Dolby Vision & HDR10+ encoding."}),"\n",(0,s.jsx)(n.li,{children:"This makes it particularly useful for encoding HDR content without requiring additional post-processing steps or external tools."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Performance"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Based on SVT-AV1, it retains the performance characteristics of its parent encoder."}),"\n",(0,s.jsx)(n.li,{children:"Adds super slow presets (-2 and -3) for research purposes and extremely high-quality encoding. These additional presets can be useful for creating reference encodes or applications where encoding time is not a concern."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"SVT-AV1-PSY is particularly well-suited for:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Encoding scenarios where subjective visual quality is prioritized over pure metric performance"}),"\n",(0,s.jsx)(n.li,{children:"HDR content encoding in Dolby Vision or HDR10+"}),"\n",(0,s.jsx)(n.li,{children:"Users who want fine-grained control over psychovisual aspects of encoding"}),"\n",(0,s.jsx)(n.li,{children:"Projects that require a balance between the speed of SVT-AV1 and enhanced visual quality"}),"\n",(0,s.jsx)(n.li,{children:"Encoding challenging content with complex textures or high-contrast scenes"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Some drawbacks are:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Everything that applies to SVT-AV1, including the lack of support for 4:4:4 chroma subsampling and 12-bit color depth that are useful in specific scenarios"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"conclusion-1",children:"Conclusion"}),"\n",(0,s.jsx)(n.p,{children:"While SVT-AV1 is known for being fast, aomenc is renowned for its high-quality output, and rav1e is recognized for its safety and reliability, each encoder has strengths and weaknesses. The best encoder for you will depend on your specific needs and priorities."}),"\n",(0,s.jsxs)(n.p,{children:["As this guide is focused on offline encoding, ",(0,s.jsx)(n.strong,{children:"SVT-AV1-PSY"})," combines aomenc's traditional perceptual strength with SVT-AV1's speed. Like rav1e, it is easy to use due to strong default settings that prevent cargo culting, and overall it can be considered the best of all three worlds. It is actively developed by a team of responsive community members, and it is a great choice for most users who want a balance between quality per bit, speed, and ease of use."]}),"\n",(0,s.jsx)(n.p,{children:'The "best" encoder often depends on your use case, content type, and target audience. It\'s always worth experimenting with different encoders and settings to find the optimal balance for your needs. Many advanced users even employ multiple encoders in their workflows, choosing the most appropriate tool for each specific task or content type.'}),"\n",(0,s.jsx)(n.h2,{id:"final-conclusion",children:"Final Conclusion"}),"\n",(0,s.jsxs)(n.p,{children:["The AV1 ecosystem has grown to the point where a single comprehensive guide cannot effectively cover the entire extent of the available tools and techniques for AV1 encoding across ",(0,s.jsx)(n.em,{children:"every"})," use case. If you want more detail about a particular tool, where to acquire it, or how to compile an encoder, you can find that information throughout the various wiki entries linked on this page."]}),"\n",(0,s.jsxs)(n.p,{children:["Reading can get you far, but it is natural to have questions. Please don't hesitate to connect with the team behind the Codec Wiki and many of these tools via our ",(0,s.jsx)(n.a,{href:"https://discord.gg/bbQD5MjDr3",children:"AV1 for Dummies Discord server"}),". We're happy to help you with anything you need, and your questions and feedback help the wiki grow and improve. We hope you enjoy your journey into AV1 encoding, and we wish you the best of luck in your encoding endeavors!"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);